}
palpie(Tol_bright)
palpie(Tol_muted)
palpie(cud)
par(mfrow=c(2,2))
palpie(Tol_light)
palpie(Tol_bright)
palpie(cud)
palpie(Tol_muted)
deparse(substitute(Tol_bright))
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=.75, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
palpie(Tol_muted)
par(mfrow=c(2,2))
palpie(Tol_muted)
palpie(Tol_bright)
palpie(Tol_light)
palpie(cud)
show_col(Tol_muted)
show_col(Tol_light)
show_col(Tol_bright)
show_col(Tol_muted)
show_col(cud)
par(mfrow=c(2,2))
show_col(Tol_light)
show_col(Tol_bright)
show_col(Tol_muted)
show_col(cud)
pal(Tol_bright)
par(mfrow=c(2,2))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Cud)
Cud <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Cud)
par(mfrow=c(2,2))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = col, ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
pal(Cud)
pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
# Function for plotting colors as pie
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=.75, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
par(mfrow=c(2,2))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=1, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
par(mfrow=c(2,2))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
par(mfrow=c(4,1))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
par(mfrow=c(1,4))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
cb_palette <- c("#999999", "#E69F00", "#56B4E9", "#009E73","#F0E442", "#0072B2", "#D55E00", "#CC79A7")
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=1, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
paslpie(cb_palette)
palpie(cb_palette)
shiny::runApp('surfdrive/Shiny-project/PlotsOfData')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
??scale_fill_viridis
??scale_fill_viridis_c
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
??scale_color_viridis
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
??scale_color_viridis_c
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
?t.test
x <- c(1200,1190,1180,1210)
x
y <- c(580,590,600,610)
x/y
t.test(x,y)
mean(y/x)
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotsOfData')
?colnames
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotTwist')
?read.csv
x <- "I am going Out"
nchar(x)- nchar(gsub(" ", "", x))
x
x <- "I am going_Out"
nchar(x)- nchar(gsub(" ", "", x))
gsub(" ", "", x)
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
isNumeric(3)
isNumeric("a")
isNumeric(3)
is.numeric(3)
is.numeric("3")
runApp('surfdrive/Shiny-project/PlotTwist')
?svg
?pdf
?svg
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
?postscript
runApp('surfdrive/Shiny-project/PlotTwist')
?png
?pdf
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
?cairo_ps
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotTwist')
?scale_fill_viridis_c
?scale_fill_gradient
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
?scale_fill_gradientn
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
n <- 1e5
df <- data.frame(x = rexp(n), y = rexp(n))
p <- ggplot(df, aes(x = x, y = y)) + stat_binhex()
p
p + scale_fill_gradient(name = "count", trans = "log",
breaks = my_breaks, labels = my_breaks)
p + scale_fill_gradient(name = "count", trans = "log",
labels = my_breaks)
p + scale_fill_gradient(name = "count", trans = "log")
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
install.packages("clValid")
library("dplyr")
simdat = lapply(c(0, 8), function(mx) {
lapply(c(0,8), function(my) {
tibble(x = rnorm(100, mean = mx, sd = 2),
y = rnorm(100, mean = my, sd = 2),
class = paste(mx, my, sep = ":"))
}) %>% bind_rows
}) %>% bind_rows
simdat
simdatxy = simdat[, c("x", "y")] # without class label
ggplot(simdat, aes(x = x, y = y, col = class)) + geom_point() + coord_fixed()
wss = tibble(k = 1:8, value = NA_real_)
wss$value[1] = sum(scale(simdatxy, scale = FALSE)^2)
for (i in 2:nrow(wss)) {
km  = kmeans(simdatxy, centers = wss$k[i])
wss$value[i] = sum(km$withinss)
}
ggplot(wss, aes(x = k, y = value)) + geom_col()
library("fpc")
library("cluster")
CH = tibble(
k = 2:8,
value = sapply(k, function(i) {
p = pam(simdatxy, i)
calinhara(simdatxy, p$cluster)
})
)
ggplot(CH, aes(x = k, y = value)) + geom_line() + geom_point() +
ylab("CH index")
set.seed(98765)
iriss <- iris[sample(150,20),-5]
iriss
km <- kmeans(iriss,3)
km$cluster
calinhara(iriss,km$cluster)
km <- kmeans(iriss,2)
calinhara(iriss,km$cluster)
library("fpc")
library("cluster")
CH = tibble(
k = 2:12,
value = sapply(k, function(i) {
p = pam(simdatxy, i)
calinhara(simdatxy, p$cluster)
})
)
#Plot the Calinski-Harabasz index
ggplot(CH, aes(x = k, y = value)) + geom_line() + geom_point() +
ylab("CH index")
CH
ggplot(wss, aes(x = k, y = value)) + geom_col()
simdat
simdatxy
?wss
??wss
?fpc
pam(simdatxy,3)
p <- pam(simdatxy,3)
p$cluster
ound(calinhara(iriss,km$cluster),digits=2)
round(calinhara(iriss,km$cluster),digits=2)
km$cluster
runApp('surfdrive/Shiny-project/PlotTwist')
library("fpc")
#library("cluster")
CH = tibble(
k = 2:12,
value = sapply(k, function(i) {
p = kmeans(simdatxy, i)
calinhara(simdatxy, p$cluster)
})
)
#Plot the Calinski-Harabasz index
ggplot(CH, aes(x = k, y = value)) + geom_line() + geom_point() +
ylab("CH index")
library("fpc")
#library("cluster")
CH = tibble(
k = 1:12,
value = sapply(k, function(i) {
p = kmeans(simdatxy, i)
calinhara(simdatxy, p$cluster)
})
)
#Plot the Calinski-Harabasz index
ggplot(CH, aes(x = k, y = value)) + geom_line() + geom_point() +
ylab("CH index")
library("fpc")
#library("cluster")
CH = tibble(
k = 2:12,
value = sapply(k, function(i) {
p = kmeans(simdatxy, i)
calinhara(simdatxy, p$cluster)
})
)
#Plot the Calinski-Harabasz index
ggplot(CH, aes(x = k, y = value)) + geom_line() + geom_point() +
ylab("CH index")
runApp('surfdrive/Shiny-project/PlotTwist')
10
x <- 10
1:x
df_label <- data.frame(1:x, c("cluster_")
)
df_label <- data.frame(1:x, c("cluster_"))
df_label
data.frame(label=c("Cluster "), size=1:number_of_clusters)
data.frame(label=c("Cluster "), size=1:10)
unite(label,size)
data.frame(label=c("Cluster "), size=1:10) %>% unite(label,size)
data.frame(label=c("Cluster "), size=1:10) %>% unite(c(label,size))
data.frame(label=c("Cluster "), size=1:10) %>% unite(c(label,size))
data.frame(label=c("Cluster "), size=1:10)
data.frame(label=c("Cluster "), size=1:10) %>% unite(x,c(label,size))
data.frame(label=c("Cluster "), size=1:10) %>% unite(x,c(label,size), sep="")
data.frame(label=c("Cluster "), size=1:10) %>% unite(label,c(label,size), sep="")
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotsOfDifferences')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('Desktop/Switch-app')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/Two-plots')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/Two-plots')
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
p <- qplot(1,1)
p2 <- xyplot(1~1)
r <- rectGrob(gp=gpar(fill="grey90"))
t <- textGrob("text")
grid.arrange(t, p, p2, r, ncol=2)
?textGrob()
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
p <- qplot(1,1)
p2 <- xyplot(1~1)
r <- rectGrob(gp=gpar(fill="grey90"))
t <- textGrob("text, blah, blah")
grid.arrange(t, p, p2, r, ncol=2)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
p <- qplot(1,1)
p2 <- xyplot(1~1)
r <- rectGrob(gp=gpar(fill="grey90"))
t <- textGrob("text, blah, blah",just = "left")
grid.arrange(t, p, p2, r, ncol=2)
runApp('surfdrive/Shiny-project/Two-plots')
runApp('surfdrive/Shiny-project/Two-plots')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
??theme_bw()
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
ggplot(data = df) +
aes(x=continent) +
aes(y=pop) +
theme_dark(  base_size=15 ) +
theme(panel.grid = element_blank()) +
NULL
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
?theme()
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
shiny::runApp('surfdrive/Shiny-project/ggPlotteR')
runApp('surfdrive/Shiny-project/ggPlotteR')
install.packages('Rcan')
shiny::runApp('surfdrive/Shiny-project/ggPlotteR')
0.2e-6*1*e-15
0.2e-6*1*1e-15
0.2e-6*1*1e-15*6e23
shiny::runApp('surfdrive/Shiny-project/ggPlotteR')
runApp('surfdrive/Shiny-project/ggPlotteR')
shiny::runApp('surfdrive/Shiny-project/ggPlotteR')
runApp('surfdrive/Shiny-project/ggPlotteR')
runApp('surfdrive/Shiny-project/ggPlotteR')
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
install.packages("plotly")
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/Volcanoes/volcanoshiny-master')
runApp('surfdrive/Shiny-project/Volcanoes/volcanoR-master')
runApp('surfdrive/Shiny-project/Volcanoes/VolcanoPlot_shiny_app-master')
runApp('surfdrive/Shiny-project/Tooltip-simple')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
runApp('surfdrive/Shiny-project/Tooltip-simple')
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('~/surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
?round()
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
